{"mappings":"AAAA,6DAA6D;AAC7D,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,QAAQ,GAAG,CAAC,kBAAmB,gBAAgB;IAE/C,yDAAyD;IACzD,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,SAAS;QAC9D,QAAQ,GAAG,CAAC;QACZ,OAAO,QAAQ,CAAC,IAAI,GAAG,cAAe,mCAAmC;IAC3E;IAEA,yDAAyD;IACzD,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,SAAS;QAC9D,QAAQ,GAAG,CAAC;QACZ,OAAO,QAAQ,CAAC,IAAI,GAAG,cAAe,mCAAmC;IAC3E;IAEA,yBAAyB;IACzB,MAAM,WAAW,SAAS,gBAAgB,CAAC;IAE3C,+BAA+B;IAC/B,MAAM,iBAAiB,CAAC,SAAS,OAAO,KAAK;QAC3C,IAAI,YAAY;QAEhB,MAAM,OAAO,CAAC;YACZ,IAAI,CAAC,WAAW,YAAY;YAC5B,MAAM,WAAW,YAAY;YAC7B,MAAM,UAAU,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,WAAW,WAAY,CAAA,MAAM,KAAI,IAAK,QAAQ;YAClF,QAAQ,WAAW,GAAG;YAEtB,IAAI,WAAW,UACb,sBAAsB;iBAEtB,QAAQ,WAAW,GAAG,KAAK,6CAA6C;QAE5E;QAEA,sBAAsB;IACxB;IAEA,wEAAwE;IACxE,MAAM,2BAA2B;QAC/B,SAAS,OAAO,CAAC,CAAA;YACf,MAAM,SAAS,CAAC,QAAQ,YAAY,CAAC,gBAAgB,4CAA4C;YACjG,eAAe,SAAS,GAAG,QAAQ,OAAO,yBAAyB;QACrE;IACF;IAEA,8CAA8C;IAC9C;IAEA,6DAA6D;IAC7D,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAE9C,eAAe,gBAAgB,CAAC,cAAc;QAC5C;IACF;AACF","sources":["js/index.js"],"sourcesContent":["// Ensure the DOM is fully loaded before executing the script\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  console.log('Script loaded');  // Debugging log\r\n\r\n  // Redirect to login page when Find Job button is clicked\r\n  document.getElementById('findJobBtn').addEventListener('click', function() {\r\n    console.log('Find Job button clicked');\r\n    window.location.href = 'login.html';  // This will redirect to login page\r\n  });\r\n\r\n  // Redirect to login page when Post Job button is clicked\r\n  document.getElementById('postJobBtn').addEventListener('click', function() {\r\n    console.log('Post Job button clicked');\r\n    window.location.href = 'login.html';  // This will redirect to login page\r\n  });\r\n\r\n  // Counter animation code\r\n  const counters = document.querySelectorAll('.number');\r\n\r\n  // Function to animate counters\r\n  const animateCounter = (counter, start, end, duration) => {\r\n    let startTime = null;\r\n\r\n    const step = (timestamp) => {\r\n      if (!startTime) startTime = timestamp;\r\n      const progress = timestamp - startTime;\r\n      const current = Math.min(Math.floor(progress / duration * (end - start) + start), end);\r\n      counter.textContent = current;\r\n\r\n      if (progress < duration) {\r\n        requestAnimationFrame(step);\r\n      } else {\r\n        counter.textContent = end; // Ensure the counter ends at the exact value\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(step);\r\n  };\r\n\r\n  // Function to trigger animations for each counter with the target value\r\n  const triggerCounterAnimations = () => {\r\n    counters.forEach(counter => {\r\n      const target = +counter.getAttribute('data-number'); // Get the target number from data attribute\r\n      animateCounter(counter, 0, target, 2000); // Animate over 2 seconds\r\n    });\r\n  };\r\n\r\n  // Trigger animations immediately on page load\r\n  triggerCounterAnimations();\r\n\r\n  // Add hover event to start animation when section is hovered\r\n  const sectionCounter = document.querySelector('.section-counter');\r\n\r\n  sectionCounter.addEventListener('mouseenter', function() {\r\n    triggerCounterAnimations();\r\n  });\r\n});\r\n"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}
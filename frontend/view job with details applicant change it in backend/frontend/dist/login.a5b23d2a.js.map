{"mappings":"AAAA,SAAS,cAAc,CAAC,SAAS,gBAAgB,CAAC,SAAS,eAAgB,KAAK;IAC5E,MAAM,cAAc,IAAI,kCAAkC;IAE1D,kBAAkB;IAClB,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,MAAM,QAAQ,KAAK,aAAa,CAAC,kBAAkB,KAAK;IACxD,MAAM,WAAW,KAAK,aAAa,CAAC,kBAAkB,KAAK;IAE3D,kBAAkB;IAClB,IAAI,CAAC,SAAS,CAAC,UAAU;QACrB,MAAM;QACN;IACJ;IAEA,IAAI;QACA,gCAAgC;QAChC,MAAM,WAAW,MAAM,MAAM,wCAAwC;YACjE,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QAC3C;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,IAAI,SAAS,EAAE,EAAE;YACb,qDAAqD;YACrD,MAAM,QAAQ,KAAK,KAAK;YACxB,MAAM,iBAAiB,KAAK,GAAG,KAAK,SAAS,uCAAuC;YAEpF,aAAa,OAAO,CAAC,SAAS;YAC9B,aAAa,OAAO,CAAC,gBAAgB;YAErC,sBAAsB;YACtB,MAAM,WAAW,KAAK,IAAI;YAE1B,yBAAyB;YACzB,MAAM;YAEN,WAAW;gBACP,8BAA8B;gBAC9B,IAAI,aAAa,UACb,OAAO,QAAQ,CAAC,OAAO,CAAC;qBAExB,OAAO,QAAQ,CAAC,OAAO,CAAC,cAAc,gCAAgC;YAE9E,GAAG,OAAO,yCAAyC;QACvD,OACI,MAAM,KAAK,OAAO,IAAI;IAE9B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACV;AACJ","sources":["js/login.js"],"sourcesContent":["document.getElementById('login').addEventListener('click', async function (event) {\r\n    event.preventDefault(); // Prevent default anchor behavior\r\n\r\n    // Get form values\r\n    const form = document.querySelector(\"form\");\r\n    const email = form.querySelector(\"#form3Example3\").value;\r\n    const password = form.querySelector(\"#form3Example4\").value;\r\n\r\n    // Validate inputs\r\n    if (!email || !password) {\r\n        alert(\"Please enter both email and password.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Send login request to backend\r\n        const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(\"Login response data:\", data);\r\n\r\n        if (response.ok) {\r\n            // Save token and its expiration time to localStorage\r\n            const token = data.token;\r\n            const expirationTime = Date.now() + 3600000; // Token expires in 1 hour (3600000 ms)\r\n            \r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('token_expiry', expirationTime);\r\n\r\n            // Get the user's role\r\n            const userRole = data.role;\r\n\r\n            // Role-based redirection\r\n            alert(\"Login successful! Redirecting...\");\r\n\r\n            setTimeout(function () {\r\n                // Redirect based on user role\r\n                if (userRole === 'seeker') {\r\n                    window.location.replace(\"http://localhost:5000/create-profile.html\");\r\n                } else {\r\n                    window.location.replace(\"home.html\"); // Default home page redirection\r\n                }\r\n            }, 2000); // Delay to show alert before redirection\r\n        } else {\r\n            alert(data.message || \"Login failed!\");\r\n        }\r\n    } catch (error) {\r\n        console.error('Error during login:', error);\r\n        alert('An error occurred. Please try again later.');\r\n    }\r\n});\r\n"],"names":[],"version":3,"file":"login.a5b23d2a.js.map","sourceRoot":"/__parcel_source_root/"}